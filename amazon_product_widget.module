<?php

/**
 * @file
 * Module file.
 */

/**
 * Implements hook_theme().
 */
function amazon_product_widget_theme($existing, $type, $theme, $path) {
  return [
    'amazon_product_widget' => [
      'variables' => [
        'label' => '',
        'entity_id' => '',
        'entity_type' => '',
        'field' => '',
        'products' => [],
      ],
    ],
    'amazon_product_widget_shopping' => [
      'variables' => [
        'title' => '',
        'products' => [],
      ],
    ],
    'amazon_product_widget_product' => [
      'variables' => [
        'medium_image' => [
          'URL' => '',
          'Height' => NULL,
          'Width' => NULL,
        ],
        'large_image' => [
          'URL' => '',
          'Height' => NULL,
          'Width' => NULL,
        ],
        'asin' => '',
        'name' => '',
        'title' => '',
        'url' => '',
        'call_to_action_text' => '',
        'currency_symbol' => '',
        'manufacturer' => '',
        'price' => '',
        'suggested_price' => '',
        'product_available' => FALSE,
        'is_eligible_for_prime' => FALSE,
      ],
    ],
  ];
}

/**
 * Implements hook_cron().
 */
function amazon_product_widget_cron() {
  /** @var \Drupal\amazon_product_widget\ProductService $product_service */
  $product_service = \Drupal::service('amazon_product_widget.product_service');
  try {
    $product_service->queueSearchResults();
    $product_service->queueProductRenewal();
  }
  catch (Exception $e) {
    watchdog_exception('amazon_product_widget', $e);
  }
}

/**
 * Check whether the provided ASIN is valid.
 *
 * @param string $asin
 *   Amazon standard identification number.
 *
 * @return bool
 *   TRUE if valid.
 */
function amazon_product_widget_is_valid_asin($asin) {
  $asin = trim($asin);
  if (strlen($asin) == 10 && !preg_match('/\s/', $asin)) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Get all ASINS which are stored in product widgets.
 */
function amazon_product_widget_get_all_asins() {
  /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $field_manager */
  $field_manager = \Drupal::service('entity_field.manager');
  $fields_map = $field_manager->getFieldMapByFieldType('amazon_product_widget_field_type');
  $asins = [];
  foreach ($fields_map as $entity_type => $fields) {
    foreach ($fields as $fieldname => $field) {
      $result = \Drupal::database()->query("SELECT {$fieldname}_asins FROM {$entity_type}__{$fieldname}")->fetchCol();
      foreach ($result as $asin_list) {
        $asin_ids = explode(",", $asin_list);
        $asins += array_combine($asin_ids, $asin_ids);
      }
    }
  }
  return $asins;
}
